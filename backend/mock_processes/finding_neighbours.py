from scipy.spatial import KDTree
from scipy.spatial.distance import euclidean, cosine 
import os 
import pickle
import cv2

PICKLES = "/home/atlantis/Documents/Project/python_proge/selti_naoraamat/backend/temp/pickles"

embeds = []
facedatas = []
cnt = 0
for pckl in os.listdir(PICKLES):
    with open(os.path.join(PICKLES, pckl), "rb") as f:
        asi = pickle.load(f)
    facedatas.append(asi)
    embeds.append(asi.embeddings)
    if cnt == 925: print(asi.embeddings)
    cnt+=1


test_embed = [-0.10907498002052307,0.10538727790117264,0.06389768421649933,-0.04507702961564064,-0.17190571129322052,0.048586487770080566,-0.08184368908405304,-0.043421681970357895,0.05052734166383743,-0.03288662061095238,0.24755321443080902,-0.013875571079552174,-0.26787102222442627,-0.06988655030727386,-0.05677774176001549,0.09843961894512177,-0.07947627454996109,-0.08477450162172318,-0.07901372015476227,-0.052382901310920715,0.092409648001194,0.09436308592557907,-0.009275292977690697,0.06058691442012787,-0.17425744235515594,-0.28141817450523376,-0.027641018852591515,-0.1347646415233612,-0.09989016503095627,-0.1558348536491394,-0.021854737773537636,0.11578905582427979,-0.07213439047336578,-0.016784651204943657,0.05196848511695862,0.0668300986289978,0.008358724415302277,0.004562092944979668,0.14173921942710876,0.028860675171017647,-0.17230124771595,0.1131102591753006,0.05957016348838806,0.2627759873867035,0.1687515527009964,0.03503935784101486,0.02215774916112423,-0.07198703289031982,0.15174265205860138,-0.25608325004577637,0.08141511678695679,0.1871330589056015,0.0953461080789566,0.04432694613933563,0.09377368539571762,-0.13252992928028107,-0.00475652702152729,0.14608804881572723,-0.16353632509708405,0.06331004947423935,0.042431361973285675,-0.03331875056028366,-0.031403131783008575,-0.14267413318157196,0.1462458223104477,0.08056509494781494,-0.13602577149868011,-0.13422848284244537,0.10204952210187912,-0.11097739636898041,-0.16313403844833374,0.12476936727762222,-0.1775827556848526,-0.17047744989395142,-0.20730257034301758,0.10091803967952728,0.410501092672348,0.18876686692237854,-0.22031079232692719,0.014612294733524323,-0.0902336910367012,-0.05871665105223656,-0.04178480803966522,0.016269348561763763,-0.04908399283885956,-0.03889256715774536,-0.04075615108013153,0.003660932183265686,0.20468735694885254,0.03774702921509743,0.0007753571262583137,0.2993074357509613,0.06375306844711304,0.05107560753822327,0.053510867059230804,-0.00898812711238861,-0.079304538667202,-0.04539111256599426,-0.10338196158409119,-0.047770727425813675,-0.05184183642268181,-0.16359448432922363,-0.019221879541873932,0.07453220337629318,-0.24360592663288116,0.20894969999790192,-0.05086621642112732,0.028745662420988083,-0.037133194506168365,0.0331428237259388,-0.08048441261053085,0.07663575559854507,0.19437724351882935,-0.2701962888240814,0.17969390749931335,0.14008378982543945,0.1875544786453247,0.09316091984510422,0.11322901397943497,0.016092341393232346,-0.004068067297339439,-0.04301822930574417,-0.17042098939418793,-0.11622761934995651,0.12719324231147766,-0.11399638652801514,0.0219834316521883,0.03755667805671692]
tree = KDTree(embeds, compact_nodes=True)

dd, ii =tree.query(test_embed, k=30, distance_upper_bound=0.54)



cv2.namedWindow("tere")
for i, d in zip(ii, dd):
    print(facedatas[i].imgpath)
    print(d)
    pilt = cv2.imread(facedatas[i].imgpath)

    x1 = int(facedatas[i].rect.tl_corner().x)
    y1 = int(facedatas[i].rect.tl_corner().y)

    x2 = int(facedatas[i].rect.br_corner().x)
    y2 = int(facedatas[i].rect.br_corner().y)
    cv2.rectangle(pilt, (x1,y1), (x2,y2),  (0,0,255))
    cv2.imshow("tere", pilt)
    print()

    while True:
        _temp = cv2.waitKey(1) 
        if _temp == ord("n"):
            break
        if _temp == ord("q"):
            print(0/0)
cv2.destroyAllWindows()
